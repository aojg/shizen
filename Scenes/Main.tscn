[gd_scene load_steps=9 format=2]

[ext_resource path="res://Code/LineDrawer.gd" type="Script" id=1]
[ext_resource path="res://Code/InputManager.gd" type="Script" id=2]
[ext_resource path="res://Code/UI/InfoUI.gd" type="Script" id=3]
[ext_resource path="res://Fonts/Default.tres" type="DynamicFont" id=4]
[ext_resource path="res://Scenes/Planet.tscn" type="PackedScene" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends Spatial

#WORLD PROPERTIES
var temperature: float = 15.0
var humidity: float = 0.0

var max_entities: int = 200

var crop_arr = []

var t: Timer = Timer.new()

func get_max_entities() -> int:
	return max_entities

func set_humidity(temp: float) -> void:
	humidity = temp * temp

func _ready() -> void:
	t.connect(\"timeout\", self, \"_on_timer_timeout\")
	add_child(t)
	t.set_wait_time(1)
	t.start()

func get_average_ideal_temperature() -> float:
	var total: float = 0
	for i in crop_arr:
		total += i.ideal_temperature
	if crop_arr.size() > 0:
		return total / crop_arr.size() 
	else:
		return 0.0

func _on_timer_timeout() -> void:
	var rnd: float = randf()
	var multiplier: float = 1.0

	if rnd > 0.5:
		if randf() < 0.05:
			multiplier = 5.0
		temperature += multiplier * 0.1
	else:
		if randf() < 0.05:
			multiplier = 5.0
		temperature -= multiplier * 0.1

	set_humidity(temperature)

func _physics_process(delta: float) -> void:
	if Input.is_action_just_pressed(\"temp_up\"):
		t.set_wait_time(0.1)
	if Input.is_action_just_pressed(\"temp_down\"):
		temperature -= 1
"

[sub_resource type="StyleBoxFlat" id=3]
bg_color = Color( 0.294118, 0.541176, 0.2, 1 )

[sub_resource type="StyleBoxFlat" id=4]
bg_color = Color( 0.294118, 0.541176, 0.2, 1 )

[node name="Universe" type="Spatial"]
script = SubResource( 1 )

[node name="Line Drawer" type="Spatial" parent="."]
script = ExtResource( 1 )

[node name="Planet" parent="." instance=ExtResource( 5 )]

[node name="InputManager" type="Node" parent="."]
script = ExtResource( 2 )

[node name="InfoUI" type="Control" parent="."]
script = ExtResource( 3 )

[node name="Rect" type="ColorRect" parent="InfoUI"]
margin_right = 300.0
margin_bottom = 200.0
color = Color( 0.223529, 0.121569, 0.121569, 0.588235 )

[node name="Text" type="RichTextLabel" parent="InfoUI"]
margin_right = 300.0
margin_bottom = 200.0
custom_fonts/mono_font = ExtResource( 4 )
custom_fonts/normal_font = ExtResource( 4 )
text = "test font"

[node name="PlantMode" type="Button" parent="."]
margin_top = 330.0
margin_right = 79.0
margin_bottom = 403.0
custom_styles/focus = SubResource( 3 )
text = "plant"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="InspectMode" type="Button" parent="."]
margin_top = 410.0
margin_right = 79.0
margin_bottom = 483.0
custom_styles/focus = SubResource( 4 )
text = "inspect"
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="pressed" from="PlantMode" to="Planet" method="set_selection_mode" binds= [ "\"single\"", "\"multi\"" ]]
[connection signal="pressed" from="PlantMode" to="InputManager" method="set_input_mode" binds= [ 1 ]]
[connection signal="pressed" from="InspectMode" to="InputManager" method="set_input_mode" binds= [ 0 ]]
